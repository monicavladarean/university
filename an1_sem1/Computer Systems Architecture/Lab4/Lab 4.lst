     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 D2                          a db 11010010b
    15 00000001 36CA                        b dw 1100101000110110b
    16 00000003 00000000                    c dd 0b
    17                                      
    18                                  ; our code starts here
    19                                      ;Given the byte A and the word B, compute the doubleword C as follows:
    20                                      ;the bits 24-31 of C are the same as the bits of A
    21                                      ;the bits 15-23 of C are the invert of the bits of the lowest byte of B
    22                                      ;the bits 10-14 of C have the value 1
    23                                      ;the bits 2-9 of C are the same as the bits of the highest byte of B
    24                                      
    25                                      ;the bits 0-1 both contain the value of the sign bit of A
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ; ...
    29 00000000 B118                            mov CL,24
    30 00000002 BB00000000                      mov EBX,0
    31 00000007 8A1D[00000000]                  mov BL,[a]
    32 0000000D D3E3                            SHL EBX,CL
    33 0000000F 091D[03000000]                  or [c], EBX
    34                                          
    35 00000015 8B1D[01000000]                  mov EBX, [b]
    36 0000001B F7D3                            not EBX
    37 0000001D 81E3FF010000                    and EBX,00000000000000000000000111111111b
    38 00000023 C1E30F                          shl EBX,15
    39 00000026 091D[03000000]                  or [c],EBX
    40                                          
    41 0000002C 810D[03000000]00FC-             or dword[c],00000000000001111110000000000b
    41 00000034 0000               
    42 00000036 A1[03000000]                    mov EAX,[c]
    43                                          
    44 0000003B BB00000000                      mov EBX,0
    45 00000040 668B1D[01000000]                mov BX, [b]
    46 00000047 81E300FF0000                    and EBX,00000000000000001111111100000000b
    47 0000004D C1EB06                          shr EBX,6
    48 00000050 091D[03000000]                  or [c],EBX
    49                                          
    50 00000056 B800000000                      mov EAX,0
    51 0000005B A0[00000000]                    mov AL, [a]
    52 00000060 2480                            and AL, 10000000
    52          ******************       warning: byte data exceeds bounds [-w+number-overflow]
    53 00000062 C0E807                          shr AL,7
    54 00000065 0905[03000000]                  or [c],EAX
    55                                          
    56 0000006B D0E0                            shl AL,1
    57 0000006D 0905[03000000]                  or [c],EAX
    58                                          
    59                                          ; exit(0)
    60 00000073 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    61 00000075 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
