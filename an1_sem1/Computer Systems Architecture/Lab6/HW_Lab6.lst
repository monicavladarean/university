     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0204020502020404            sir DB 2, 4, 2, 5, 2, 2, 4, 4 
    15                                      len equ $-sir
    16 00000008 <res 00000008>              aux resb len
    17 00000010 00                          lenght db 0
    18 00000011 <res 00000010>              rez resw len
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 BE[00000000]                    mov esi, sir
    25 00000005 B908000000                      mov ecx, len
    26 0000000A BF[08000000]                    mov edi, aux
    27                                          
    28                                          repeta:
    29                                          
    30 0000000F AC                              lodsb
    31 00000010 88C3                            mov BL,AL
    32 00000012 56                              push esi
    33 00000013 51                              push ecx
    34 00000014 BE[08000000]                    mov esi, aux
    35 00000019 8B0D[10000000]                  mov ecx, [lenght]
    36 0000001F E30C                            jecxz adauga
    37                                          do:
    38                                          
    39 00000021 AC                              lodsb
    40 00000022 38D8                            cmp AL, BL
    41 00000024 7402                            je break
    42                                          
    43 00000026 E2F9                            loop do
    44                                          break:
    45 00000028 83F900                          cmp ecx,0
    46                                          
    47 0000002B 7509                            jne continua
    48                                          adauga:
    49 0000002D 88D8                            mov AL,BL
    50 0000002F AA                              stosb
    51 00000030 FE05[10000000]                  inc byte[lenght]
    52                                          continua:
    53 00000036 59                              pop ecx
    54 00000037 5E                              pop esi
    55                                          
    56 00000038 E2D5                            loop repeta
    57                                          
    58 0000003A 8B0D[10000000]                  mov ecx, [lenght]
    59 00000040 BE[08000000]                    mov esi, aux
    60 00000045 BF[11000000]                    mov edi, rez
    61                                          repeta2:
    62                                          
    63 0000004A AC                              lodsb 
    64 0000004B 88C3                            mov BL, AL
    65 0000004D 56                              push esi
    66 0000004E 51                              push ecx
    67 0000004F B908000000                      mov ecx, len
    68 00000054 BE[00000000]                    mov esi, sir
    69 00000059 B700                            mov BH,0
    70                                          do2:
    71                                          
    72 0000005B AC                              lodsb
    73 0000005C 38D8                            cmp AL,BL
    74 0000005E 7503                            jne continue
    75 00000060 80C701                          add BH,1
    76                                          continue:
    77 00000063 E2F6                            loop do2
    78 00000065 6689D8                          mov AX,BX
    79 00000068 66AB                            stosw
    80 0000006A 59                              pop ecx
    81 0000006B 5E                              pop esi
    82                                          
    83 0000006C E2DC                            loop repeta2
    84                                      
    85                                          ; exit(0)
    86 0000006E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    87 00000070 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
