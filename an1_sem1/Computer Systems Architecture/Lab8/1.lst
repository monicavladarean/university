     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  extern scanf
    11                                  import scanf msvcrt.dll 
    12                                  extern printf
    13                                  import printf msvcrt.dll 
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 00000000                    x dd 0
    18 00000004 257800                      read db "%x",0
    19 00000007 256400                      print db "%d",  0
    20 0000000A 25750A0D00                  print2 db "%u",10, 13, 0
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 68[00000000]                    push dword x
    27 00000005 68[04000000]                    push dword read
    28 0000000A FF15[00000000]                  call [scanf]
    29 00000010 83C408                          add esp, 4*2
    30                                          
    31 00000013 FF35[00000000]                  push dword [x]
    32 00000019 68[0A000000]                    push dword print2
    33 0000001E FF15[00000000]                  call [printf]
    34 00000024 83C408                          add esp, 4*2
    35                                          
    36 00000027 A0[00000000]                    mov AL, byte[x]
    37 0000002C 6698                            CBW
    38 0000002E 98                              CWDE
    39                                          
    40 0000002F 50                              push EAX
    41 00000030 68[07000000]                    push dword print
    42 00000035 FF15[00000000]                  call [printf]
    43 0000003B 83C408                          add esp, 4*2
    44                                      
    45                                          ; exit(0)
    46 0000003E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    47 00000040 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
