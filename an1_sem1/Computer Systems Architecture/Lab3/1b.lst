     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02                          a db 2
    15 00000001 0200                        b dw 2
    16 00000003 02000000                    c dd 2
    17 00000007 0200000000000000            d dq 2
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 A0[00000000]                    mov AL,[a]
    24 00000005 6698                            CBW
    25 00000007 660305[01000000]                add AX,[b]
    26 0000000E 6699                            CWD
    27 00000010 0305[03000000]                  add EAX, [c]
    28 00000016 99                              CDQ
    29 00000017 0305[07000000]                  add EAX,[d]
    30 0000001D 8B1D[00000000]                  mov EBX, [a]
    31 00000023 031D[01000000]                  add EBX,[b]
    32 00000029 29D8                            sub EAX, EBX
    33 0000002B 19CA                            sbb EDX, ECX
    34                                          ; exit(0)
    35 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
