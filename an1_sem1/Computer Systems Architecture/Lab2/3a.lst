     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02                         a db 2
    15 00000001 04                          b db 4
    16 00000002 03                          c db 3
    17 00000003 C800                        d dw 200
    18 00000005 03                          x db 3
    19 00000006 02                          y db 2
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 66A1[00000000]                  mov AX, [a]
    25 00000006 660305[01000000]                add AX, [b]
    26 0000000D F625[05000000]                  mul byte[x]
    27 00000013 6689C3                          mov BX, AX
    28 00000016 66A1[02000000]                  mov AX, [c]
    29 0000001C F625[06000000]                  mul byte[y]
    30 00000022 6629C3                          sub BX,AX
    31 00000025 6689D8                          mov AX, BX
    32 00000028 660305[03000000]                add AX, [d]
    33                                          
    34                                          ; exit(0)
    35 0000002F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000031 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
    37                                   
